7주차 실습코드 예시

/*
키패드 입출력  H/W 결선에 따른  DDRC  레지스터 및  PINC 값 비트 검사 확인
동작상태 안내
초기 키패드 누르지 않았을 때 0 출력
이후 키패드 누르면 누른 키값으로 표기 되고 다음 신규 키값 변경 전까지 FND 출력 유지
*/
#define F_CPU 14.7456E6
#include <avr/io.h>
#include <util/delay.h>
// Fnd 문자표 및 fnd포트 핀 설정
unsigned char Port_char[] ={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xd8,0x80,0x90,0x88,0x83,0xc4, 0xa1,0x84,0x8e}; // 애노드 공통
unsigned int Port_fnd[] ={0x1f,0x2f,0x4f,0x8f}; // FND0 ON, FND1 ON, FND2 ON, FND3 ON
 
void PORT_Init(void)
{
DDRE = 0xf0; // PORTE4~PORTE7 FND 출력 선택
// (PE4 : FND0, PE5, FND1, PE6 : FND2, PE7 : FND3)
DDRB = 0xff; // 세그먼트의 문자포트 출력
// (PB0:a, PB1:b, PB2:c, PB3:d, PB4:e, PB5:f, PB6:g, PB7:dot)
DDRC = 0x0f;
}
 
void Num_divide(unsigned char* divide_num, int num)
{
int buffer=0;
 
divide_num[3] = num/1000;
buffer= num%1000;
divide_num[2] = buffer/100;
buffer= buffer%100;
divide_num[1] = buffer/10;
divide_num[0] = buffer%10;
 
}
 
unsigned char keyScan(void)
{
unsigned char key_scan_line = 0xF7;
unsigned char key_scan_loop=0, getpinData=0, key_num=0;
 
for(key_scan_loop=0; key_scan_loop<4; key_scan_loop++)
{
PORTC = key_scan_line;
_delay_us(1);
getpinData = PINC & 0xF0;
if(getpinData != 0)
{
switch(getpinData)
{
case 0x10:
key_num=key_scan_loop*4+1; 
break;
case 0x20:
key_num=key_scan_loop*4+2; 
break;
case 0x40:
key_num=key_scan_loop*4+3; 
break;
case 0x80:
key_num=key_scan_loop*4+4; 
break;
default:
break;
} return key_num;
} key_scan_line = (key_scan_line >> 1);
} return 0;
}
 
int main (void)
{
unsigned char FND_Print[4]={0,};
int key_in_value=0;
PORT_Init();
 
while(1)
{
 
key_in_value = keyScan();
if(key_in_value)
Num_divide(FND_Print, key_in_value);
else;
PORTE = Port_fnd[0];
PORTB = Port_char[FND_Print[0]];
_delay_ms(10);
PORTE = Port_fnd[1];
PORTB = Port_char[FND_Print[1]];
_delay_ms(10);
PORTE = Port_fnd[2];
PORTB = Port_char[FND_Print[2]];
_delay_ms(10);
PORTE = Port_fnd[3];
PORTB = Port_char[FND_Print[3]];
_delay_ms(10);
 
}
}